package championship.prediction.model;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.StringTokenizer;

public class ChampionshipPredictionModel {

    static HashMap<Integer, Integer> wins = new HashMap<>();
    static HashMap<Integer, Double> auto = new HashMap<>();

    public static void main(String[] args) {
        doRankings(0, true);
//        List<Team> teams = (List<Team>) TEAMS.clone();
//        Collections.sort(teams, new Comparator<Team>() {
//            @Override
//            public int compare(Team o1, Team o2) {
//                int d = Integer.compare(wins.get(o2.team), wins.get(o1.team));
//                if (d == 0) {
//                    d = Double.compare(auto.get(o2.team), auto.get(o1.team));
//                }
//                return d;
//            }
//        });
//
//        int team;
//        int lastRank = 0;
//        for (Team t : teams) {
//            team = t.team;
//            double start = get(team).opr;
//            get(team).opr = start - 30;
//            while (get(team).opr < start + 30) {
//                int rank;
//
//                while ((rank = doRankings(team, false)) == lastRank && get(team).opr < (start + 30)) {
//                    get(team).opr += 0.1;
//                }
//                if (rank != lastRank && rank <= 15) {
//                     System.out.println(team + "\t" + rank + "\t" + get(team).opr);
//                }
//                lastRank = rank;
//            }
//
//            get(team).opr = start;
//        }
    }

    static int doRankings(int analysis, boolean verbose) {
        wins.clear();
        auto.clear();
        for (Team team : TEAMS) {
            wins.put(team.team, 0);
            auto.put(team.team, 0.0);
        }

        StringTokenizer t = new StringTokenizer(matches, ",\n");
        int red1 = 0, red2 = 0, red3 = 0, blue1 = 0, blue2 = 0, blue3 = 0;
        for (int x = 0; t.hasMoreElements(); x++) {
            x %= 18;
            String s = t.nextToken();
            int team = 0;
            try {
                team = Integer.parseInt(s);
            } catch (NumberFormatException ex) {
            }
            switch (x) {
                case (3):
                    red1 = team;
                    break;
                case (4):
                    red2 = team;
                    break;
                case (5):
                    red3 = team;
                    break;
                case (6):
                    blue1 = team;
                    break;
                case (7):
                    blue2 = team;
                    break;
                case (8):
                    blue3 = team;

                    double red = get(red1).opr + get(red2).opr + get(red3).opr;
                    double redAuto = get(red1).autoOpr + get(red2).autoOpr + get(red3).autoOpr;
                    double blue = get(blue1).opr + get(blue2).opr + get(blue3).opr;
                    double blueAuto = get(blue1).autoOpr + get(blue2).autoOpr + get(blue3).autoOpr;

                    if (red1 == analysis || red2 == analysis || red3 == analysis || blue1 == analysis || blue2 == analysis || blue3 == analysis) {
                        // System.out.println("[" + red1 + ", " + red2 + ", " + red3 + " " + red + " - " + blue + " " + blue1 + ", " + blue2 + ", " + blue3 + "]");
                    }
                    System.out.println("[" + red1 + ", " + red2 + ", " + red3 + " " + red + " - " + blue + " " + blue1 + ", " + blue2 + ", " + blue3 + "]");


                    if (red > blue) {
                        wins.put(red1, wins.get(red1) + 2);
                        wins.put(red2, wins.get(red2) + 2);
                        wins.put(red3, wins.get(red3) + 2);
                    } else if (blue > red) {
                        wins.put(blue1, wins.get(blue1) + 2);
                        wins.put(blue2, wins.get(blue2) + 2);
                        wins.put(blue3, wins.get(blue3) + 2);
                    } else if (blue == red) {
                        wins.put(blue1, wins.get(blue1) + 1);
                        wins.put(blue2, wins.get(blue2) + 1);
                        wins.put(blue3, wins.get(blue3) + 1);
                        wins.put(red1, wins.get(red1) + 1);
                        wins.put(red2, wins.get(red2) + 1);
                        wins.put(red3, wins.get(red3) + 1);
                    }

                    auto.put(red1, auto.get(red1) + redAuto);
                    auto.put(red2, auto.get(red2) + redAuto);
                    auto.put(red3, auto.get(red3) + redAuto);
                    auto.put(blue1, auto.get(blue1) + blueAuto);
                    auto.put(blue2, auto.get(blue2) + blueAuto);
                    auto.put(blue3, auto.get(blue3) + blueAuto);

                    break;
            }
        }

        Collections.sort(TEAMS, new Comparator<Team>() {
            @Override
            public int compare(Team o1, Team o2) {
                int d = Integer.compare(wins.get(o2.team), wins.get(o1.team));
                if (d == 0) {
                    d = Double.compare(auto.get(o2.team), auto.get(o1.team));
                }
                return d;
            }
        });
        for (Team t2 : TEAMS) {
            if (verbose) {
                System.out.println(t2.team + "\t" + (TEAMS.indexOf(t2) + 1) + "\t" + wins.get(t2.team) + "\t" + (auto.get(t2.team)));
            }
        }
        return TEAMS.indexOf(get(analysis)) + 1;
    }
    static final String matches = "1:00:00,Qualification,1,4627,2834,245,2175,4158,4452,-2.19,33.26,37.55,33.32,-2.19,-2.19,68.6228,28.9447,BLUE\n"
            + "1:07:00,Qualification,2,2169,70,4641,4462,1629,1772,33.32,83.93,-2.19,-2.19,33.32,33.32,115.0622,64.4458,BLUE\n"
            + "1:14:00,Qualification,3,1801,2502,2338,2000,3528,1405,33.32,33.26,33.32,33.32,23.49,37.55,99.8875,94.3597,BLUE\n"
            + "1:21:00,Qualification,4,4557,2474,4026,384,2978,2630,-2.19,33.26,-2.19,37.55,33.26,33.26,28.8852,104.0645,RED\n"
            + "1:28:00,Qualification,5,45,3656,1218,151,1710,1086,20.14,-2.17,37.55,83.93,33.32,37.55,55.5191,154.7998,RED\n"
            + "1:35:00,Qualification,6,118,3284,447,2403,4607,1323,83.93,23.49,37.55,33.26,-2.19,37.55,144.9761,68.6228,BLUE\n"
            + "1:42:00,Qualification,7,1241,4334,1477,1675,1114,1806,37.55,-2.19,37.55,33.32,37.55,33.32,72.9188,104.1835,RED\n"
            + "1:49:00,Qualification,8,3941,842,422,192,4797,744,-2.19,37.55,37.55,83.93,-15.26,37.55,72.9188,106.2266,RED\n"
            + "1:56:00,Qualification,9,4011,3018,2259,2337,2199,95,-2.19,33.26,33.32,33.32,33.32,83.93,64.3864,150.5634,RED\n"
            + "2:03:00,Qualification,10,2341,27,1325,2485,467,4541,33.32,56.02,37.55,33.26,37.55,-2.19,126.8897,68.6228,BLUE\n"
            + "2:10:00,Qualification,11,610,3189,295,358,2648,1429,37.55,23.49,37.55,37.55,33.26,37.55,98.5962,108.3604,RED\n"
            + "2:17:00,Qualification,12,2729,3944,4039,111,4601,4579,33.26,-2.19,-2.19,83.93,-2.19,-2.19,28.8852,79.5611,RED\n"
            + "2:24:00,Qualification,13,222,2512,3459,2046,1732,4567,83.93,33.26,23.49,33.32,33.32,-2.19,140.6802,64.4458,BLUE\n"
            + "2:31:00,Qualification,14,3641,3132,329,1912,4472,578,-2.17,23.49,37.55,33.32,-2.19,37.55,58.8711,68.6823,RED\n"
            + "2:38:00,Qualification,15,2907,125,4492,2809,3211,4502,33.26,83.93,-2.19,33.26,23.49,-2.19,115.0027,54.5626,BLUE\n"
            + "2:45:00,Qualification,16,337,4069,4522,3481,4481,1987,37.55,-2.19,-2.19,23.49,-2.19,33.32,33.1811,54.6221,RED\n"
            + "2:52:00,Qualification,17,2481,1425,1710,1378,1726,192,33.26,37.55,33.32,37.55,33.32,83.93,104.1240,154.7998,RED\n"
            + "2:59:00,Qualification,18,2978,3941,1323,2337,1114,2502,33.26,-2.19,37.55,33.32,37.55,33.26,68.6228,104.1240,RED\n"
            + "3:06:00,Qualification,19,2403,2175,1086,295,4334,1405,33.26,33.32,37.55,37.55,-2.19,37.55,104.1240,72.9188,BLUE\n"
            + "3:13:00,Qualification,20,2729,422,2630,1241,2259,4641,33.26,37.55,33.26,37.55,33.32,-2.19,104.0645,68.6823,BLUE\n"
            + "3:20:00,Qualification,21,2000,1675,3656,4026,2512,1772,33.32,33.32,-2.17,-2.19,33.26,33.32,64.4584,64.3864,BLUE\n"
            + "3:27:00,Qualification,22,842,118,2199,245,1629,2046,37.55,83.93,33.32,37.55,33.32,33.32,154.7998,104.1835,BLUE\n"
            + "3:34:00,Qualification,23,222,1325,744,4452,3132,3944,83.93,37.55,37.55,-2.19,23.49,-2.19,159.0363,19.1209,BLUE\n"
            + "3:41:00,Qualification,24,4607,2648,1806,1987,578,2809,-2.19,33.26,33.32,33.32,37.55,33.26,64.3864,104.1240,RED\n"
            + "3:48:00,Qualification,25,4601,329,95,3284,2338,1378,-2.19,37.55,83.93,23.49,33.32,37.55,119.2987,94.3597,BLUE\n"
            + "3:55:00,Qualification,26,4627,2169,2485,3459,4797,4557,-2.19,33.32,33.26,23.49,-15.26,-2.19,64.3864,6.0488,BLUE\n"
            + "4:02:00,Qualification,27,151,4579,1732,3211,1801,4462,83.93,-2.19,33.32,23.49,33.32,-2.19,115.0622,54.6221,BLUE\n"
            + "4:09:00,Qualification,28,2474,1726,3189,3018,3641,2341,33.26,33.32,23.49,33.26,-2.17,33.32,90.0638,64.3989,BLUE\n"
            + "4:16:00,Qualification,29,70,4481,610,4567,4472,125,83.93,-2.19,37.55,-2.19,-2.19,83.93,119.2987,79.5611,BLUE\n"
            + "4:23:00,Qualification,30,45,384,4502,4522,111,1912,20.14,37.55,-2.19,-2.19,83.93,33.32,55.5066,115.0622,RED\n"
            + "4:30:00,Qualification,31,1218,358,4541,4039,2481,4069,37.55,37.55,-2.19,-2.19,33.26,-2.19,72.9188,28.8852,BLUE\n"
            + "4:37:00,Qualification,32,3528,2907,2834,447,467,337,23.49,33.26,33.26,37.55,37.55,37.55,90.0043,112.6564,RED\n"
            + "4:44:00,Qualification,33,1477,3481,1425,1429,4492,27,37.55,23.49,37.55,37.55,-2.19,56.02,98.5962,91.3885,BLUE\n"
            + "4:51:00,Qualification,34,4011,1114,192,4158,1405,118,-2.19,37.55,83.93,-2.19,37.55,83.93,119.2987,119.2987,RED\n"
            + "4:58:00,Qualification,35,4579,2199,1710,4452,2502,2485,-2.19,33.32,33.32,-2.19,33.26,33.26,64.4458,64.3269,BLUE\n"
            + "5:05:00,Qualification,36,4607,1325,1675,2338,4557,3189,-2.19,37.55,33.32,33.32,-2.19,23.49,68.6823,54.6221,BLUE\n"
            + "5:12:00,Qualification,37,1086,4567,4601,3211,578,3941,37.55,-2.19,-2.19,23.49,37.55,-2.19,33.1811,58.8586,RED\n"
            + "5:19:00,Qualification,38,245,1378,2512,4522,3944,2337,37.55,37.55,33.26,-2.19,-2.19,33.32,108.3604,28.9447,BLUE\n"
            + "5:26:00,Qualification,39,4502,1218,1726,2169,2175,1241,-2.19,37.55,33.32,33.32,33.32,37.55,68.6823,104.1835,RED\n"
            + "5:33:00,Qualification,40,2809,384,2341,447,2729,610,33.26,37.55,33.32,37.55,33.26,37.55,104.1240,108.3604,RED\n"
            + "5:40:00,Qualification,41,4462,2259,125,1987,1429,3132,-2.19,33.32,83.93,33.32,37.55,23.49,115.0622,94.3597,BLUE\n"
            + "5:47:00,Qualification,42,4797,4541,45,2046,4158,337,-15.26,-2.19,20.14,33.32,-2.19,37.55,2.6969,68.6823,RED\n"
            + "6:45:00,Qualification,43,3459,3641,3528,4069,4011,2648,23.49,-2.17,23.49,-2.19,-2.19,33.26,44.8109,28.8852,BLUE\n"
            + "6:53:00,Qualification,44,1323,1425,358,329,70,1801,37.55,37.55,37.55,37.55,83.93,33.32,112.6564,154.7998,RED\n"
            + "7:01:00,Qualification,45,1772,4334,1732,1912,4039,4481,33.32,-2.19,33.32,33.32,-2.19,-2.19,64.4458,28.9447,BLUE\n"
            + "7:09:00,Qualification,46,3018,467,2630,222,3481,842,33.26,37.55,33.26,83.93,23.49,37.55,104.0645,144.9761,RED\n"
            + "7:17:00,Qualification,47,295,3656,95,1806,2474,4492,37.55,-2.17,83.93,33.32,33.26,-2.19,119.3112,64.3864,BLUE\n"
            + "7:25:00,Qualification,48,2000,1629,4472,2978,2481,2907,33.32,33.32,-2.19,33.26,33.26,33.26,64.4458,99.7685,RED\n"
            + "7:32:00,Qualification,49,111,4026,422,2834,1477,3284,83.93,-2.19,37.55,33.26,37.55,23.49,119.2987,94.3002,BLUE\n"
            + "7:39:00,Qualification,50,151,27,4641,4627,2403,744,83.93,56.02,-2.19,-2.19,33.26,37.55,137.7684,68.6228,BLUE\n"
            + "7:46:00,Qualification,51,4601,192,4522,4541,2648,2259,-2.19,83.93,-2.19,-2.19,33.26,33.32,79.5611,64.3864,BLUE\n"
            + "7:53:00,Qualification,52,3941,2512,337,4011,2485,384,-2.19,33.26,37.55,-2.19,33.26,37.55,68.6228,68.6228,RED\n"
            + "9:30:00,Qualification,53,70,4452,1912,2341,4557,1114,83.93,-2.19,33.32,33.32,-2.19,37.55,115.0622,68.6823,BLUE\n"
            + "9:37:00,Qualification,54,447,2337,4158,4579,2169,842,37.55,33.32,-2.19,-2.19,33.32,37.55,68.6823,68.6823,RED\n"
            + "9:44:00,Qualification,55,1405,1710,1772,4797,3211,95,37.55,33.32,33.32,-15.26,23.49,83.93,104.1835,92.1664,BLUE\n"
            + "9:51:00,Qualification,56,222,1378,2907,610,1218,2199,83.93,37.55,33.26,37.55,37.55,33.32,154.7403,108.4199,BLUE\n"
            + "9:58:00,Qualification,57,3528,4492,245,1323,4472,3018,23.49,-2.19,37.55,37.55,-2.19,33.26,58.8586,68.6228,RED\n"
            + "10:05:00,Qualification,58,422,578,4627,4334,1726,4069,37.55,37.55,-2.19,-2.19,33.32,-2.19,72.9188,28.9447,BLUE\n"
            + "10:12:00,Qualification,59,1477,2474,2403,2729,1325,1801,37.55,33.26,33.26,33.26,37.55,33.32,104.0645,104.1240,RED\n"
            + "10:19:00,Qualification,60,1629,1429,151,111,3641,4607,33.32,37.55,83.93,83.93,-2.17,-2.19,154.7998,79.5736,BLUE\n"
            + "10:26:00,Qualification,61,358,125,1806,4026,27,118,37.55,83.93,33.32,-2.19,56.02,83.93,154.7998,137.7684,BLUE\n"
            + "10:33:00,Qualification,62,2481,2809,45,295,3481,1675,33.26,33.26,20.14,37.55,23.49,33.32,86.6523,94.3597,RED\n"
            + "10:40:00,Qualification,63,4481,2338,3944,4502,2834,2978,-2.19,33.32,-2.19,-2.19,33.26,33.26,28.9447,64.3269,RED\n"
            + "10:47:00,Qualification,64,2046,744,329,4462,1086,2630,33.32,37.55,37.55,-2.19,37.55,33.26,108.4199,68.6228,BLUE\n"
            + "10:54:00,Qualification,65,2175,1732,4641,2000,3189,1425,33.32,33.32,-2.19,33.32,23.49,37.55,64.4458,94.3597,RED\n"
            + "11:01:00,Qualification,66,1987,1241,467,3459,2502,4039,33.32,37.55,37.55,23.49,33.26,-2.19,108.4199,54.5626,BLUE\n"
            + "11:08:00,Qualification,67,4567,3132,1726,3656,3284,3528,-2.19,23.49,33.32,-2.17,23.49,23.49,54.6221,44.8109,BLUE\n"
            + "11:15:00,Qualification,68,1429,1378,1912,4579,2403,3941,37.55,37.55,33.32,-2.19,33.26,-2.19,108.4199,28.8852,BLUE\n"
            + "11:22:00,Qualification,69,3211,447,4472,358,2474,2512,23.49,37.55,-2.19,37.55,33.26,33.26,58.8586,104.0645,RED\n"
            + "11:29:00,Qualification,70,2729,1806,3641,70,4158,2481,33.26,33.32,-2.17,83.93,-2.19,33.26,64.3989,115.0027,RED\n"
            + "11:36:00,Qualification,71,1772,151,2485,2338,245,222,33.32,83.93,33.26,33.32,37.55,83.93,150.5039,154.7998,RED\n"
            + "11:43:00,Qualification,72,1405,2199,4557,1477,45,2648,37.55,33.32,-2.19,37.55,20.14,33.26,68.6823,90.9483,RED\n"
            + "1:00:00,Qualification,73,2175,1675,337,27,578,2630,33.32,33.32,37.55,56.02,37.55,33.26,104.1835,126.8302,RED\n"
            + "1:08:00,Qualification,74,4462,4069,95,1323,3944,2000,-2.19,-2.19,83.93,37.55,-2.19,33.32,79.5611,68.6823,BLUE\n"
            + "1:16:00,Qualification,75,3284,1114,1425,384,2169,4039,23.49,37.55,37.55,37.55,33.32,-2.19,98.5962,68.6823,BLUE\n"
            + "1:24:00,Qualification,76,4026,2046,1801,2337,610,4627,-2.19,33.32,33.32,33.32,37.55,-2.19,64.4458,68.6823,RED\n"
            + "1:32:00,Qualification,77,4641,4011,4502,2341,2502,842,-2.19,-2.19,-2.19,33.32,33.26,37.55,-6.5565,104.1240,RED\n"
            + "1:40:00,Qualification,78,4797,125,3481,4334,1325,3656,-15.26,83.93,23.49,-2.19,37.55,-2.17,92.1664,33.1937,BLUE\n"
            + "1:48:00,Qualification,79,1218,4567,2834,2259,329,3189,37.55,-2.19,33.26,33.32,37.55,23.49,68.6228,94.3597,RED\n"
            + "1:56:00,Qualification,80,4522,2978,467,4492,1710,744,-2.19,33.26,37.55,-2.19,33.32,37.55,68.6228,68.6823,RED\n"
            + "2:04:00,Qualification,81,3132,1086,4481,118,4541,2809,23.49,37.55,-2.19,83.93,-2.19,33.26,58.8586,115.0027,RED\n"
            + "2:12:00,Qualification,82,192,111,4452,1732,1987,2907,83.93,83.93,-2.19,33.32,33.32,33.26,165.6786,99.8875,BLUE\n"
            + "2:20:00,Qualification,83,295,3459,4607,3018,422,4601,37.55,23.49,-2.19,33.26,37.55,-2.19,58.8586,68.6228,RED\n"
            + "2:28:00,Qualification,84,1629,2337,3211,1241,2403,337,33.32,33.32,23.49,37.55,33.26,37.55,90.1233,108.3604,RED\n"
            + "2:36:00,Qualification,85,358,3941,151,2729,1726,4557,37.55,-2.19,83.93,33.26,33.32,-2.19,119.2987,64.3864,BLUE\n"
            + "2:44:00,Qualification,86,1429,3284,2199,1325,1806,1772,37.55,23.49,33.32,37.55,33.32,33.32,94.3597,104.1835,RED\n"
            + "2:52:00,Qualification,87,2630,4472,4627,3656,3189,4502,33.26,-2.19,-2.19,-2.17,23.49,-2.19,28.8852,19.1335,BLUE\n"
            + "2:59:00,Qualification,88,4026,467,4158,1218,1425,2648,-2.19,37.55,-2.19,37.55,37.55,33.26,33.1811,108.3604,RED\n"
            + "3:06:00,Qualification,89,4334,2259,1378,70,447,2000,-2.19,33.32,37.55,83.93,37.55,33.32,68.6823,154.7998,RED\n"
            + "3:13:00,Qualification,90,95,3528,1732,1086,1477,384,83.93,23.49,33.32,37.55,37.55,37.55,140.7396,112.6564,BLUE\n"
            + "3:20:00,Qualification,91,1323,111,1710,1675,3132,3459,37.55,83.93,33.32,33.32,23.49,23.49,154.7998,80.2995,BLUE\n"
            + "3:27:00,Qualification,92,3641,3944,192,4567,2169,295,-2.17,-2.19,83.93,-2.19,33.32,37.55,79.5736,68.6823,BLUE\n"
            + "3:34:00,Qualification,93,3481,4541,4579,329,4011,2474,23.49,-2.19,-2.19,37.55,-2.19,33.26,19.1209,68.6228,RED\n"
            + "3:41:00,Qualification,94,744,578,4481,245,2907,2341,37.55,37.55,-2.19,37.55,33.26,33.32,72.9188,104.1240,RED\n"
            + "3:48:00,Qualification,95,118,1987,1801,1912,2834,222,83.93,33.32,33.32,33.32,33.26,83.93,150.5634,150.5039,BLUE\n"
            + "3:55:00,Qualification,96,4797,4462,2338,2512,27,3018,-15.26,-2.19,33.32,33.26,56.02,33.26,15.8726,122.5342,RED\n"
            + "4:02:00,Qualification,97,4601,4452,1241,2978,2809,842,-2.19,-2.19,37.55,33.26,33.26,37.55,33.1811,104.0645,RED\n"
            + "4:09:00,Qualification,98,610,4039,4607,1405,4641,4522,37.55,-2.19,-2.19,37.55,-2.19,-2.19,33.1811,33.1811,RED\n"
            + "4:16:00,Qualification,99,4069,1114,2485,1629,125,45,-2.19,37.55,33.26,33.32,83.93,20.14,68.6228,137.3877,RED\n"
            + "4:23:00,Qualification,100,2502,4492,2481,2046,422,2175,33.26,-2.19,33.26,33.32,37.55,33.32,64.3269,104.1835,RED\n"
            + "4:30:00,Qualification,101,2199,4541,4502,1732,1323,3641,33.32,-2.19,-2.19,33.32,37.55,-2.17,28.9447,68.6948,RED\n"
            + "4:37:00,Qualification,102,2341,1772,3528,4579,358,192,33.32,33.32,23.49,-2.19,37.55,83.93,90.1233,119.2987,RED\n"
            + "4:44:00,Qualification,103,2169,2630,3211,245,1987,1325,33.32,33.26,23.49,37.55,33.32,37.55,90.0638,108.4199,RED\n"
            + "4:51:00,Qualification,104,2337,2474,2648,1086,222,3284,33.32,33.26,33.26,37.55,83.93,23.49,99.8280,144.9761,RED\n"
            + "4:58:00,Qualification,105,3459,3189,2403,578,3481,95,23.49,23.49,33.26,37.55,23.49,83.93,80.2400,144.9761,RED\n"
            + "5:05:00,Qualification,106,1429,3018,70,118,4627,1241,37.55,33.26,83.93,83.93,-2.19,37.55,154.7403,119.2987,BLUE\n"
            + "5:12:00,Qualification,107,467,4452,2000,1726,45,4481,37.55,-2.19,33.32,33.32,20.14,-2.19,68.6823,51.2701,BLUE\n"
            + "5:19:00,Qualification,108,744,1405,1675,1378,125,2834,37.55,37.55,33.32,37.55,83.93,33.26,108.4199,154.7403,RED\n"
            + "5:26:00,Qualification,109,842,2481,2512,610,1114,111,37.55,33.26,33.26,37.55,37.55,83.93,104.0645,159.0363,RED\n"
            + "5:33:00,Qualification,110,4567,2485,4607,4462,2907,1425,-2.19,33.26,-2.19,-2.19,33.26,37.55,28.8852,68.6228,RED\n"
            + "5:40:00,Qualification,111,4557,4039,329,2809,1710,337,-2.19,-2.19,37.55,33.26,33.32,37.55,33.1811,104.1240,RED\n"
            + "5:47:00,Qualification,112,2338,4069,1806,2259,3941,2175,33.32,-2.19,33.32,33.32,-2.19,33.32,64.4458,64.4458,RED\n"
            + "5:54:00,Qualification,113,3132,2502,4334,4026,151,4601,23.49,33.26,-2.19,-2.19,83.93,-2.19,54.5626,79.5611,RED\n"
            + "6:01:00,Qualification,114,3656,2046,2978,1477,447,4011,-2.17,33.32,33.26,37.55,37.55,-2.19,64.3989,72.9188,RED\n"
            + "6:08:00,Qualification,115,4522,4797,2729,1218,295,1629,-2.19,-15.26,33.26,37.55,37.55,33.32,15.8131,108.4199,RED\n"
            + "8:15:00,Qualification,116,4472,27,3944,1801,384,422,-2.19,56.02,-2.19,33.32,37.55,37.55,51.6509,108.4199,RED\n"
            + "8:22:00,Qualification,117,4492,4158,1325,1912,4641,1726,-2.19,-2.19,37.55,33.32,-2.19,33.32,33.1811,64.4458,RED\n"
            + "8:29:00,Qualification,118,2474,4481,1378,111,3528,4627,33.26,-2.19,37.55,83.93,23.49,-2.19,68.6228,105.2385,RED\n"
            + "8:36:00,Qualification,119,2834,4607,70,4541,95,2512,33.26,-2.19,83.93,-2.19,83.93,33.26,115.0027,115.0027,RED\n"
            + "8:43:00,Qualification,120,4579,3641,610,2630,118,45,-2.19,-2.17,37.55,33.26,83.93,20.14,33.1937,137.3282,RED\n"
            + "8:50:00,Qualification,121,222,4334,3189,2481,2169,3941,83.93,-2.19,23.49,33.26,33.32,-2.19,105.2385,64.3864,BLUE\n"
            + "8:57:00,Qualification,122,3284,2502,3211,192,4069,1675,23.49,33.26,23.49,83.93,-2.19,33.32,80.2400,115.0622,RED\n"
            + "9:04:00,Qualification,123,4522,447,578,1241,125,2199,-2.19,37.55,37.55,37.55,83.93,33.32,72.9188,154.7998,RED\n"
            + "9:11:00,Qualification,124,1114,4601,1987,2046,1772,1218,37.55,-2.19,33.32,33.32,33.32,37.55,68.6823,104.1835,RED\n"
            + "9:18:00,Qualification,125,384,744,1429,3656,4158,2338,37.55,37.55,37.55,-2.17,-2.19,33.32,112.6564,28.9572,BLUE\n"
            + "9:25:00,Qualification,126,4462,422,4039,1806,4452,3481,-2.19,37.55,-2.19,33.32,-2.19,23.49,33.1811,54.6221,RED\n"
            + "9:32:00,Qualification,127,1912,1405,337,3459,2978,1425,33.32,37.55,37.55,23.49,33.26,37.55,108.4199,94.3002,BLUE\n"
            + "9:39:00,Qualification,128,2809,27,4011,1629,1323,4567,33.26,56.02,-2.19,33.32,37.55,-2.19,87.0926,68.6823,BLUE\n"
            + "9:46:00,Qualification,129,329,2000,295,151,2337,2341,37.55,33.32,37.55,83.93,33.32,33.32,108.4199,150.5634,RED\n"
            + "9:53:00,Qualification,130,2175,842,2907,1710,1477,3944,33.32,37.55,33.26,33.32,37.55,-2.19,104.1240,68.6823,BLUE\n"
            + "10:00:00,Qualification,131,2403,2259,358,4797,1732,4492,33.26,33.32,37.55,-15.26,33.32,-2.19,104.1240,15.8726,BLUE\n"
            + "10:07:00,Qualification,132,1801,1086,4641,467,245,4557,33.32,37.55,-2.19,37.55,37.55,-2.19,68.6823,72.9188,RED\n"
            + "10:14:00,Qualification,133,2648,2729,2485,3018,4502,3132,33.26,33.26,33.26,33.26,-2.19,23.49,99.7685,54.5626,BLUE\n"
            + "10:21:00,Qualification,134,4472,4579,2338,4026,4452,4607,-2.19,-2.19,33.32,-2.19,-2.19,-2.19,28.9447,-6.5565,BLUE";
    static final String data = "27,56.02187717,18.27\n"
            + "45,20.13995113,5.23\n"
            + "70,44.01676325,22.94\n"
            + "95,11.84529079,4.49\n"
            + "111,69.85229065,29.22\n"
            + "118,85.62802425,28.07\n"
            + "125,51.77025807,18.97\n"
            + "151,24.77642437,7.76\n"
            + "192,36.88977448,14.77\n"
            + "222,48.11757041,15.48\n"
            + "245,58.0944712,14.85\n"
            + "295,28.03555889,9.88\n"
            + "329,48.89778617,16.06\n"
            + "337,8.376123374,1.59\n"
            + "358,36.98091075,1.63\n"
            + "384,11.83864962,10.75\n"
            + "422,33.36481982,15.23\n"
            + "447,69.44083816,16.71\n"
            + "467,1.200089968,0.89\n"
            + "578,10.85272309,6.59\n"
            + "610,63.0038438,14.37\n"
            + "744,31.06083894,9.44\n"
            + "842,30.20227158,2.31\n"
            + "1086,13.53429294,2.22\n"
            + "1114,103.8888838,21.38\n"
            + "1218,66.47548508,16.27\n"
            + "1241,55.48758944,22.75\n"
            + "1323,23.09475449,9.41\n"
            + "1325,13.24871781,7.03\n"
            + "1378,14.4475215,3.26\n"
            + "1405,36.33016826,12.57\n"
            + "1425,52.09360772,4.58\n"
            + "1429,27.35699543,14.62\n"
            + "1477,77.50091132,26.04\n"
            + "1629,44.33407149,13.89\n"
            + "1675,22.8171563,6.41\n"
            + "1710,8.745049241,5.5\n"
            + "1726,29.70274254,11.61\n"
            + "1732,51.24451493,15.95\n"
            + "1772,35.74197867,9.96\n"
            + "1801,13.41530374,6.15\n"
            + "1806,68.80843874,15.84\n"
            + "1912,32.95710891,14.49\n"
            + "1987,32.75810929,15.34\n"
            + "2000,63.56411516,20.5\n"
            + "2046,14.06044515,3.62\n"
            + "2169,72.11663117,14.47\n"
            + "2175,52.1480686,14.45\n"
            + "2199,27.70945098,10.76\n"
            + "2259,12.672077,4.07\n"
            + "2337,44.01948307,14.95\n"
            + "2338,48.14507922,5.24\n"
            + "2341,24.62592464,8.7\n"
            + "2403,52.13633924,15.68\n"
            + "2474,61.58591305,28.88\n"
            + "2481,44.42366257,17.35\n"
            + "2485,61.01548568,15.01\n"
            + "2502,57.05802053,12.48\n"
            + "2512,54.05348687,11.96\n"
            + "2630,40.31409213,12.75\n"
            + "2648,56.53674076,18.25\n"
            + "2729,64.01600569,20.49\n"
            + "2809,17.75656543,2.82\n"
            + "2834,29.90228111,14.22\n"
            + "2907,43.70967568,14.73\n"
            + "2978,16.65294256,10.64\n"
            + "3018,38.2988939,23.56\n"
            + "3132,38.37775522,4.34\n"
            + "3189,31.8867214,7.93\n"
            + "3211,12.3,7.57\n"
            + "3284,52.62419096,20.05\n"
            + "3459,20.15789255,13.6\n"
            + "3481,12.69555147,5.02\n"
            + "3528,42.51663234,20.08\n"
            + "3641,42.04904892,12.1\n"
            + "3656,44.94652234,15.16\n"
            + "3941,27.16871238,4.7\n"
            + "3944,9.253877696,1.84\n"
            + "4011,12.81794711,4.42\n"
            + "4026,18.96942276,9.17\n"
            + "4039,59.08947448,18.62\n"
            + "4069,37.73777007,14.94\n"
            + "4158,37.63915652,10.36\n"
            + "4334,48.58751016,15.44\n"
            + "4452,51.24323255,17.16\n"
            + "4462,14.25018261,9.14\n"
            + "4472,18.80073456,12.63\n"
            + "4481,4.625062589,2.58\n"
            + "4492,25.31006741,7.39\n"
            + "4502,20.06781042,3.99\n"
            + "4522,26.61550758,6.25\n"
            + "4541,18.80116776,0.95\n"
            + "4557,17.2213213,2.19\n"
            + "4567,16.12,3.19\n"
            + "4579,45.70513057,13.72\n"
            + "4601,34.42214625,8.65\n"
            + "4607,8.622746445,1.81\n"
            + "4627,1.469472787,1.03\n"
            + "4641,16.52609961,4.97\n"
            + "4797,26.81275993,5.81";
    static final ArrayList<Team> TEAMS = new ArrayList<>();

    static Team get(int team) {
        for (Team t : TEAMS) {
            if (t.team == team) {
                return t;
            }
        }
        return null;
    }

    static {
        StringTokenizer tokenizer = new StringTokenizer(data, ",\n");
        int index = 0;
        int team = 0;
        double opr = 0;
        double autoopr;
        while (tokenizer.hasMoreElements()) {
            if (index == 0) {
                team = Integer.parseInt(tokenizer.nextToken());
            } else if (index == 1) {
                opr = Double.parseDouble(tokenizer.nextToken());
            } else if (index == 2) {
                autoopr = Double.parseDouble(tokenizer.nextToken());
                TEAMS.add(new Team(team, opr, autoopr));
            }

            index++;
            if (index > 2) {
                index = 0;
            }
        }
    }
}
